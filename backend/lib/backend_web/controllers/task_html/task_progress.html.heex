<br /><br />
<p>Task progress</p><br />
<div class="w-full bg-gray-200 rounded-full h-2.5 dark:bg-gray-700">
  <div id="progress-bar" class="bg-blue-600 h-2.5 rounded-full" style="width: 0%"></div>
</div>
<script>
  async function updateStats(msg) {
    if (msg.progress) {
      document.getElementById('progress-bar').style = `width: ${parseFloat(msg.progress)}%`;
    }
    if (msg.status === "done" || msg.status === "failed") {
      console.log(msg.status)
      await fetch('<%= ~p"/tasks/#{@task}/update_status" %>', {
        method: "POST",
        headers: {
          'Content-Type': 'application/x-www-form-urlencoded',
          'x-csrf-token': '<%= @csrf %>'
        },
        body: new URLSearchParams({
          'status': msg.status
        })
      }).then(response => {
        if (response.status === 201) {
          location.reload();
        }
      })

    }
  }

  function connect() {
    var host = window.document.location.host.replace(/:.*/, '');
    var ws = new WebSocket('ws://' + host + ':1337/websocket');  // standalone config
    ws.onopen = function () {
      console.log("connected to websocket");
      setInterval(function () { var date = new Date(); ws.send(JSON.stringify({ 'keepalive': date.getTime() })); }, 30000);
    };

    ws.onmessage = function (event) {
      updateStats(JSON.parse(event.data));
    };

    ws.onclose = function (event) {
      console.log("websocket connection closed");
      switch (event.code) {
        case 1000:  // CLOSE_NORMAL
          break;
        default:
          setTimeout(function () {
            connect();
          }, 1000);
          break;
      }
    };
  }

  connect();
</script>